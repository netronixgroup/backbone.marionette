{"version":3,"file":"backbone.marionette.js","sources":["src/utils/proxy.js","src/utils/extend.js","src/common/normalize-methods.js","src/utils/error.js","src/common/bind-events.js","src/common/bind-requests.js","src/common/get-option.js","src/common/merge-options.js","src/common/monitor-view-events.js","src/common/trigger-method.js","src/mixins/events.js","src/mixins/common.js","src/mixins/destroy.js","src/mixins/radio.js","src/object.js","src/utils/invoke.js","src/mixins/behaviors.js","src/mixins/delegate-entity-events.js","src/mixins/template-render.js","src/utils/get-namespaced-event-name.js","src/config/features.js","src/mixins/triggers.js","src/mixins/ui.js","src/config/dom.js","src/mixins/view.js","src/common/view.js","src/region.js","src/common/build-region.js","src/mixins/regions.js","src/config/renderer.js","src/view.js","src/child-view-container.js","src/collection-view.js","src/behavior.js","src/application.js","src/backbone.marionette.js"],"sourcesContent":["//Internal utility for creating context style global utils\nconst proxy = function(method) {\n  return function(context, ...args) {\n    return method.apply(context, args);\n  };\n};\n\nexport default proxy;\n","// Marionette.extend\n// -----------------\n\nimport Backbone from 'backbone';\n\n// Borrow the Backbone `extend` method so we can use it as needed\nconst extend = Backbone.Model.extend;\n\nexport default extend;\n","import _ from 'underscore';\n\n// Marionette.normalizeMethods\n// ----------------------\n\n// Pass in a mapping of events => functions or function names\n// and return a mapping of events => functions\nconst normalizeMethods = function(hash) {\n  if (!hash) { return }\n\n  return _.reduce(hash, (normalizedHash, method, name) => {\n    if (!_.isFunction(method)) {\n      method = this[method];\n    }\n    if (method) {\n      normalizedHash[name] = method;\n    }\n    return normalizedHash;\n  }, {});\n};\n\nexport default normalizeMethods;\n","// Error\n// -----\n\nimport _ from 'underscore';\nimport extend from './extend';\nimport {version} from '../../package.json';\n\nconst errorProps = ['description', 'fileName', 'lineNumber', 'name', 'message', 'number', 'url'];\n\nconst MarionetteError = extend.call(Error, {\n  urlRoot: `http://marionettejs.com/docs/v${version}/`,\n\n  url: '',\n\n  constructor(options) {\n    const error = Error.call(this, options.message);\n    _.extend(this, _.pick(error, errorProps), _.pick(options, errorProps));\n\n    if (Error.captureStackTrace) {\n      this.captureStackTrace();\n    }\n\n    this.url = this.urlRoot + this.url;\n  },\n\n  captureStackTrace() {\n    Error.captureStackTrace(this, MarionetteError);\n  },\n\n  toString() {\n    return `${ this.name }: ${ this.message } See: ${ this.url }`;\n  }\n});\n\nexport default MarionetteError;\n","// Bind Entity Events & Unbind Entity Events\n// -----------------------------------------\n//\n// These methods are used to bind/unbind a backbone \"entity\" (e.g. collection/model)\n// to methods on a target object.\n//\n// The first parameter, `target`, must have the Backbone.Events module mixed in.\n//\n// The second parameter is the `entity` (Backbone.Model, Backbone.Collection or\n// any object that has Backbone.Events mixed in) to bind the events from.\n//\n// The third parameter is a hash of { \"event:name\": \"eventHandler\" }\n// configuration. Multiple handlers can be separated by a space. A\n// function can be supplied instead of a string handler name.\n\nimport _ from 'underscore';\nimport normalizeMethods from './normalize-methods';\nimport MarionetteError from '../utils/error';\n\nfunction normalizeBindings(context, bindings) {\n  if (!_.isObject(bindings)) {\n    throw new MarionetteError({\n      message: 'Bindings must be an object.',\n      url: 'common.html#bindevents'\n    });\n  }\n\n  return normalizeMethods.call(context, bindings);\n}\n\nfunction bindEvents(entity, bindings) {\n  if (!entity || !bindings) { return this; }\n\n  this.listenTo(entity, normalizeBindings(this, bindings));\n\n  return this;\n}\n\nfunction unbindEvents(entity, bindings) {\n  if (!entity) { return this; }\n\n  if (!bindings) {\n    this.stopListening(entity);\n    return this;\n  }\n\n  this.stopListening(entity, normalizeBindings(this, bindings));\n\n  return this;\n}\n\n// Export Public API\nexport {\n  bindEvents,\n  unbindEvents\n};\n","// Bind/Unbind Radio Requests\n// -----------------------------------------\n//\n// These methods are used to bind/unbind a backbone.radio request\n// to methods on a target object.\n//\n// The first parameter, `target`, will set the context of the reply method\n//\n// The second parameter is the `Radio.channel` to bind the reply to.\n//\n// The third parameter is a hash of { \"request:name\": \"replyHandler\" }\n// configuration. A function can be supplied instead of a string handler name.\n\nimport _ from 'underscore';\nimport normalizeMethods from './normalize-methods';\nimport MarionetteError from '../utils/error';\n\nfunction normalizeBindings(context, bindings) {\n  if (!_.isObject(bindings)) {\n    throw new MarionetteError({\n      message: 'Bindings must be an object.',\n      url: 'common.html#bindrequests'\n    });\n  }\n\n  return normalizeMethods.call(context, bindings);\n}\n\nfunction bindRequests(channel, bindings) {\n  if (!channel || !bindings) { return this; }\n\n  channel.reply(normalizeBindings(this, bindings), this);\n\n  return this;\n}\n\nfunction unbindRequests(channel, bindings) {\n  if (!channel) { return this; }\n\n  if (!bindings) {\n    channel.stopReplying(null, null, this);\n    return this;\n  }\n\n  channel.stopReplying(normalizeBindings(this, bindings));\n\n  return this;\n}\n\nexport {\n  bindRequests,\n  unbindRequests\n};\n","// Marionette.getOption\n// --------------------\n\n// Retrieve an object, function or other value from the\n// object or its `options`, with `options` taking precedence.\nconst getOption = function(optionName) {\n  if (!optionName) { return; }\n  if (this.options && (this.options[optionName] !== undefined)) {\n    return this.options[optionName];\n  } else {\n    return this[optionName];\n  }\n};\n\nexport default getOption;\n","import _ from 'underscore';\n\n// Merge `keys` from `options` onto `this`\nconst mergeOptions = function(options, keys) {\n  if (!options) { return; }\n\n  _.each(keys, (key) => {\n    const option = options[key];\n    if (option !== undefined) {\n      this[key] = option;\n    }\n  });\n};\n\nexport default mergeOptions;\n","// DOM Refresh\n// -----------\n\nimport _ from 'underscore';\n\n// Trigger method on children unless a pure Backbone.View\nfunction triggerMethodChildren(view, event, shouldTrigger) {\n  if (!view._getImmediateChildren) { return; }\n  _.each(view._getImmediateChildren(), child => {\n    if (!shouldTrigger(child)) { return; }\n    child.triggerMethod(event, child);\n  });\n}\n\nfunction shouldTriggerAttach(view) {\n  return !view._isAttached;\n}\n\nfunction shouldAttach(view) {\n  if (!shouldTriggerAttach(view)) { return false; }\n  view._isAttached = true;\n  return true;\n}\n\nfunction shouldTriggerDetach(view) {\n  return view._isAttached;\n}\n\nfunction shouldDetach(view) {\n  view._isAttached = false;\n  return true;\n}\n\nfunction triggerDOMRefresh(view) {\n  if (view._isAttached && view._isRendered) {\n    view.triggerMethod('dom:refresh', view);\n  }\n}\n\nfunction triggerDOMRemove(view) {\n  if (view._isAttached && view._isRendered) {\n    view.triggerMethod('dom:remove', view);\n  }\n}\n\nfunction handleBeforeAttach() {\n  triggerMethodChildren(this, 'before:attach', shouldTriggerAttach);\n}\n\nfunction handleAttach() {\n  triggerMethodChildren(this, 'attach', shouldAttach);\n  triggerDOMRefresh(this);\n}\n\nfunction handleBeforeDetach() {\n  triggerMethodChildren(this, 'before:detach', shouldTriggerDetach);\n  triggerDOMRemove(this);\n}\n\nfunction handleDetach() {\n  triggerMethodChildren(this, 'detach', shouldDetach);\n}\n\nfunction handleBeforeRender() {\n  triggerDOMRemove(this);\n}\n\nfunction handleRender() {\n  triggerDOMRefresh(this);\n}\n\n// Monitor a view's state, propagating attach/detach events to children and firing dom:refresh\n// whenever a rendered view is attached or an attached view is rendered.\nfunction monitorViewEvents(view) {\n  if (view._areViewEventsMonitored || view.monitorViewEvents === false) { return; }\n\n  view._areViewEventsMonitored = true;\n\n  view.on({\n    'before:attach': handleBeforeAttach,\n    'attach': handleAttach,\n    'before:detach': handleBeforeDetach,\n    'detach': handleDetach,\n    'before:render': handleBeforeRender,\n    'render': handleRender\n  });\n}\n\nexport default monitorViewEvents;\n","// Trigger Method\n// --------------\n\nimport _ from 'underscore';\nimport getOption from './get-option';\n\n// split the event name on the \":\"\nconst splitter = /(^|:)(\\w)/gi;\n\n// Only calc getOnMethodName once\nconst methodCache = {};\n\n// take the event section (\"section1:section2:section3\")\n// and turn it in to uppercase name onSection1Section2Section3\nfunction getEventName(match, prefix, eventName) {\n  return eventName.toUpperCase();\n}\n\nconst getOnMethodName = function(event) {\n  if (!methodCache[event]) {\n    methodCache[event] = 'on' + event.replace(splitter, getEventName);\n  }\n\n  return methodCache[event];\n};\n\n// Trigger an event and/or a corresponding method name. Examples:\n//\n// `this.triggerMethod(\"foo\")` will trigger the \"foo\" event and\n// call the \"onFoo\" method.\n//\n// `this.triggerMethod(\"foo:bar\")` will trigger the \"foo:bar\" event and\n// call the \"onFooBar\" method.\nexport default function triggerMethod(event) {\n  // get the method name from the event name\n  const methodName = getOnMethodName(event);\n  const method = getOption.call(this, methodName);\n  let result;\n\n  // call the onMethodName if it exists\n  if (_.isFunction(method)) {\n    // pass all args, except the event name\n    result = method.apply(this, _.drop(arguments));\n  }\n\n  // trigger the event\n  this.trigger.apply(this, arguments);\n\n  return result;\n}\n","import triggerMethod from '../common/trigger-method';\n\nexport default {\n  triggerMethod\n}\n","import _ from 'underscore';\nimport Backbone from 'backbone';\n\nimport getOption from '../common/get-option';\nimport mergeOptions from '../common/merge-options';\nimport normalizeMethods from '../common/normalize-methods';\nimport triggerMethod from '../common/trigger-method';\nimport {\n  bindEvents,\n  unbindEvents\n} from '../common/bind-events';\nimport {\n  bindRequests,\n  unbindRequests\n} from '../common/bind-requests';\n\nconst CommonMixin = {\n\n  // Imports the \"normalizeMethods\" to transform hashes of\n  // events=>function references/names to a hash of events=>function references\n  normalizeMethods,\n\n  _setOptions(options, classOptions) {\n    this.options = _.extend({}, _.result(this, 'options'), options);\n    this.mergeOptions(options, classOptions);\n  },\n\n  // A handy way to merge passed-in options onto the instance\n  mergeOptions,\n\n  // Enable getting options from this or this.options by name.\n  getOption,\n\n  // Enable binding view's events from another entity.\n  bindEvents,\n\n  // Enable unbinding view's events from another entity.\n  unbindEvents,\n\n  // Enable binding view's requests.\n  bindRequests,\n\n  // Enable unbinding view's requests.\n  unbindRequests,\n\n  triggerMethod\n};\n\n_.extend(CommonMixin, Backbone.Events);\n\nexport default CommonMixin;\n","export default {\n  _isDestroyed: false,\n\n  isDestroyed() {\n    return this._isDestroyed;\n  },\n\n  destroy(options) {\n    if (this._isDestroyed) { return this; }\n\n    this.triggerMethod('before:destroy', this, options);\n    this._isDestroyed = true;\n    this.triggerMethod('destroy', this, options);\n    this.stopListening();\n\n    return this;\n  }\n};\n","import _ from 'underscore';\nimport Radio from 'backbone.radio';\nimport MarionetteError from '../utils/error';\n\n// MixinOptions\n// - channelName\n// - radioEvents\n// - radioRequests\n\nexport default {\n\n  _initRadio() {\n    const channelName = _.result(this, 'channelName');\n\n    if (!channelName) {\n      return;\n    }\n\n    /* istanbul ignore next */\n    if (!Radio) {\n      throw new MarionetteError({\n        message: 'The dependency \"backbone.radio\" is missing.',\n        url: 'backbone.radio.html#marionette-integration'\n      });\n    }\n\n    const channel = this._channel = Radio.channel(channelName);\n\n    const radioEvents = _.result(this, 'radioEvents');\n    this.bindEvents(channel, radioEvents);\n\n    const radioRequests = _.result(this, 'radioRequests');\n    this.bindRequests(channel, radioRequests);\n\n    this.on('destroy', this._destroyRadio);\n  },\n\n  _destroyRadio() {\n    this._channel.stopReplying(null, null, this);\n  },\n\n  getChannel() {\n    return this._channel;\n  }\n};\n","// Object\n// ------\n\nimport _ from 'underscore';\nimport extend from './utils/extend';\nimport CommonMixin from './mixins/common';\nimport DestroyMixin from './mixins/destroy';\nimport RadioMixin from './mixins/radio';\n\nconst ClassOptions = [\n  'channelName',\n  'radioEvents',\n  'radioRequests'\n];\n\n// Object borrows many conventions and utilities from Backbone.\nconst MarionetteObject = function(options) {\n  this._setOptions(options, ClassOptions);\n  this.cid = _.uniqueId(this.cidPrefix);\n  this._initRadio();\n  this.initialize.apply(this, arguments);\n};\n\nMarionetteObject.extend = extend;\n\n// Object Methods\n// --------------\n\n_.extend(MarionetteObject.prototype, CommonMixin, DestroyMixin, RadioMixin, {\n  cidPrefix: 'mno',\n\n  // This is a noop method intended to be overridden\n  initialize() {}\n});\n\nexport default MarionetteObject;\n","// Implementation of the invoke method (http://underscorejs.org/#invoke) with support for\n// lodash v3, v4, and underscore.js\nimport _ from 'underscore';\n\nexport default _.invokeMap || _.invoke;\n","import _ from 'underscore';\nimport MarionetteError from '../utils/error';\nimport _invoke from '../utils/invoke';\n\n// MixinOptions\n// - behaviors\n\n// Takes care of getting the behavior class\n// given options and a key.\n// If a user passes in options.behaviorClass\n// default to using that.\n// If a user passes in a Behavior Class directly, use that\n// Otherwise an error is thrown\nfunction getBehaviorClass(options) {\n  if (options.behaviorClass) {\n    return { BehaviorClass: options.behaviorClass, options };\n  }\n\n  //treat functions as a Behavior constructor\n  if (_.isFunction(options)) {\n    return { BehaviorClass: options, options: {} };\n  }\n\n  throw new MarionetteError({\n    message: 'Unable to get behavior class. A Behavior constructor should be passed directly or as behaviorClass property of options',\n    url: 'marionette.behavior.html#defining-and-attaching-behaviors'\n  });\n}\n\n// Iterate over the behaviors object, for each behavior\n// instantiate it and get its grouped behaviors.\n// This accepts a list of behaviors in either an object or array form\nfunction parseBehaviors(view, behaviors, allBehaviors) {\n  return _.reduce(behaviors, (reducedBehaviors, behaviorDefiniton) => {\n    const { BehaviorClass, options } = getBehaviorClass(behaviorDefiniton);\n    const behavior = new BehaviorClass(options, view);\n    reducedBehaviors.push(behavior);\n\n    return parseBehaviors(view, _.result(behavior, 'behaviors'), reducedBehaviors);\n  }, allBehaviors);\n}\n\nexport default {\n  _initBehaviors() {\n    this._behaviors = parseBehaviors(this, _.result(this, 'behaviors'), []);\n  },\n\n  _getBehaviorTriggers() {\n    const triggers = _invoke(this._behaviors, '_getTriggers');\n    return _.reduce(triggers, function(memo, _triggers) {\n      return _.extend(memo, _triggers);\n    }, {});\n  },\n\n  _getBehaviorEvents() {\n    const events = _invoke(this._behaviors, '_getEvents');\n    return _.reduce(events, function(memo, _events) {\n      return _.extend(memo, _events);\n    }, {});\n  },\n\n  // proxy behavior $el to the view's $el.\n  _proxyBehaviorViewProperties() {\n    _invoke(this._behaviors, 'proxyViewProperties');\n  },\n\n  // delegate modelEvents and collectionEvents\n  _delegateBehaviorEntityEvents() {\n    _invoke(this._behaviors, 'delegateEntityEvents');\n  },\n\n  // undelegate modelEvents and collectionEvents\n  _undelegateBehaviorEntityEvents() {\n    _invoke(this._behaviors, 'undelegateEntityEvents');\n  },\n\n  _destroyBehaviors(options) {\n    // Call destroy on each behavior after\n    // destroying the view.\n    // This unbinds event listeners\n    // that behaviors have registered for.\n    _invoke(this._behaviors, 'destroy', options);\n  },\n\n  // Remove a behavior\n  _removeBehavior(behavior) {\n    // Don't worry about the clean up if the view is destroyed\n    if (this._isDestroyed) { return; }\n\n    // Remove behavior-only triggers and events\n    this.undelegate(`.trig${ behavior.cid } .${ behavior.cid }`);\n\n    this._behaviors = _.without(this._behaviors, behavior);\n  },\n\n  _bindBehaviorUIElements() {\n    _invoke(this._behaviors, 'bindUIElements');\n  },\n\n  _unbindBehaviorUIElements() {\n    _invoke(this._behaviors, 'unbindUIElements');\n  },\n\n  _triggerEventOnBehaviors(eventName, view, options) {\n    _invoke(this._behaviors, 'triggerMethod', eventName, view, options);\n  }\n};\n","import _ from 'underscore';\n\n// MixinOptions\n// - collectionEvents\n// - modelEvents\n\nexport default {\n  // Handle `modelEvents`, and `collectionEvents` configuration\n  _delegateEntityEvents(model, collection) {\n    if (model) {\n      this._modelEvents = _.result(this, 'modelEvents');\n      this.bindEvents(model, this._modelEvents);\n    }\n\n    if (collection) {\n      this._collectionEvents = _.result(this, 'collectionEvents');\n      this.bindEvents(collection, this._collectionEvents);\n    }\n  },\n\n  // Remove any previously delegate entity events\n  _undelegateEntityEvents(model, collection) {\n    if (this._modelEvents) {\n      this.unbindEvents(model, this._modelEvents);\n      delete this._modelEvents;\n    }\n\n    if (this._collectionEvents) {\n      this.unbindEvents(collection, this._collectionEvents);\n      delete this._collectionEvents;\n    }\n  },\n\n  // Remove cached event handlers\n  _deleteEntityEventHandlers() {\n    delete this._modelEvents;\n    delete this._collectionEvents;\n  }\n};\n","import _ from 'underscore';\n\n// MixinOptions\n// - template\n// - templateContext\n\nexport default {\n\n  // Internal method to render the template with the serialized data\n  // and template context\n  _renderTemplate(template) {\n    // Add in entity data and template context\n    const data = this.mixinTemplateContext(this.serializeData()) || {};\n\n    // Render and add to el\n    const html = this._renderHtml(template, data);\n    if (typeof html !== 'undefined') {\n      this.attachElContent(html);\n    }\n  },\n\n  // Get the template for this view instance.\n  // You can set a `template` attribute in the view definition\n  // or pass a `template: TemplateFunction` parameter in\n  // to the constructor options.\n  getTemplate() {\n    return this.template;\n  },\n\n  // Mix in template context methods. Looks for a\n  // `templateContext` attribute, which can either be an\n  // object literal, or a function that returns an object\n  // literal. All methods and attributes from this object\n  // are copies to the object passed in.\n  mixinTemplateContext(serializedData) {\n    const templateContext = _.result(this, 'templateContext');\n    if (!templateContext) { return serializedData; };\n    if (!serializedData) { return templateContext; };\n    return _.extend({}, serializedData, templateContext);\n  },\n\n  // Serialize the view's model *or* collection, if\n  // it exists, for the template\n  serializeData() {\n    // If we have a model, we serialize that\n    if (this.model) {\n      return this.serializeModel();\n    }\n\n    // Otherwise, we serialize the collection,\n    // making it available under the `items` property\n    if (this.collection) {\n      return {\n        items: this.serializeCollection()\n      };\n    }\n  },\n\n  // Prepares the special `model` property of a view\n  // for being displayed in the template. Override this if\n  // you need a custom transformation for your view's model\n  serializeModel() {\n    return this.model.attributes;\n  },\n\n  // Serialize a collection\n  serializeCollection() {\n    return _.map(this.collection.models, model => model.attributes);\n  },\n\n  // Renders the data into the template\n  _renderHtml(template, data) {\n    return template(data);\n  },\n\n  // Attaches the content of a given view.\n  // This method can be overridden to optimize rendering,\n  // or to render in a non standard way.\n  //\n  // For example, using `innerHTML` instead of `$el.html`\n  //\n  // ```js\n  // attachElContent(html) {\n  //   this.el.innerHTML = html;\n  // }\n  // ```\n  attachElContent(html) {\n    this.Dom.setContents(this.el, html, this.$el);\n  }\n};\n","// Borrow event splitter from Backbone\nconst delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n\n// Set event name to be namespaced using a unique index\n// to generate a non colliding event namespace\n// http://api.jquery.com/event.namespace/\nconst getNamespacedEventName = function(eventName, namespace) {\n  const match = eventName.match(delegateEventSplitter);\n  return `${ match[1] }.${ namespace } ${ match[2] }`;\n};\n\nexport default getNamespacedEventName;\n","// Add Feature flags here\n// e.g. 'class' => false\nconst FEATURES = {\n  childViewEventPrefix: false,\n  triggersStopPropagation: true,\n  triggersPreventDefault: true,\n  DEV_MODE: false\n};\n\nfunction isEnabled(name) {\n  return !!FEATURES[name];\n}\n\nfunction setEnabled(name, state) {\n  return FEATURES[name] = state;\n}\n\nexport {\n  FEATURES,\n  setEnabled,\n  isEnabled\n};\n","import _ from 'underscore';\nimport getNamespacedEventName from '../utils/get-namespaced-event-name';\nimport { isEnabled } from '../config/features';\n\n// Internal method to create an event handler for a given `triggerDef` like\n// 'click:foo'\nfunction buildViewTrigger(view, triggerDef) {\n  if (_.isString(triggerDef)) {\n    triggerDef = {event: triggerDef};\n  }\n\n  const eventName = triggerDef.event;\n\n  let shouldPreventDefault = !!triggerDef.preventDefault;\n\n  if (isEnabled('triggersPreventDefault')) {\n    shouldPreventDefault = triggerDef.preventDefault !== false;\n  }\n\n  let shouldStopPropagation = !!triggerDef.stopPropagation;\n\n  if (isEnabled('triggersStopPropagation')) {\n    shouldStopPropagation = triggerDef.stopPropagation !== false;\n  }\n\n  return function(event, ...args) {\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n\n    if (shouldStopPropagation) {\n      event.stopPropagation();\n    }\n\n    view.triggerMethod(eventName, view, event, ...args);\n  };\n}\n\nexport default {\n\n  // Configure `triggers` to forward DOM events to view\n  // events. `triggers: {\"click .foo\": \"do:foo\"}`\n  _getViewTriggers(view, triggers) {\n    // Configure the triggers, prevent default\n    // action and stop propagation of DOM events\n    return _.reduce(triggers, (events, value, key) => {\n      key = getNamespacedEventName(key, `trig${ this.cid }`);\n      events[key] = buildViewTrigger(view, value);\n      return events;\n    }, {});\n  }\n\n};\n","import _ from 'underscore';\n// allows for the use of the @ui. syntax within\n// a given key for triggers and events\n// swaps the @ui with the associated selector.\n// Returns a new, non-mutated, parsed events hash.\nconst normalizeUIKeys = function(hash, ui) {\n  return _.reduce(hash, (memo, val, key) => {\n    const normalizedKey = normalizeUIString(key, ui);\n    memo[normalizedKey] = val;\n    return memo;\n  }, {});\n};\n\nconst uiRegEx = /@ui\\.[a-zA-Z-_$0-9]*/g;\n\n// utility method for parsing @ui. syntax strings\n// into associated selector\nconst normalizeUIString = function(uiString, ui) {\n  return uiString.replace(uiRegEx, (r) => {\n    return ui[r.slice(4)];\n  });\n};\n\n// allows for the use of the @ui. syntax within\n// a given value for regions\n// swaps the @ui with the associated selector\nconst normalizeUIValues = function(hash, ui, property) {\n  _.each(hash, (val, key) => {\n    if (_.isString(val)) {\n      hash[key] = normalizeUIString(val, ui);\n    } else if (val) {\n      const propertyVal = val[property];\n      if (_.isString(propertyVal)) {\n        val[property] = normalizeUIString(propertyVal, ui);\n      }\n    }\n  });\n  return hash;\n};\n\nexport default {\n\n  // normalize the keys of passed hash with the views `ui` selectors.\n  // `{\"@ui.foo\": \"bar\"}`\n  normalizeUIKeys(hash) {\n    const uiBindings = this._getUIBindings();\n    return normalizeUIKeys(hash, uiBindings);\n  },\n\n  // normalize the passed string with the views `ui` selectors.\n  // `\"@ui.bar\"`\n  normalizeUIString(uiString) {\n    const uiBindings = this._getUIBindings();\n    return normalizeUIString(uiString, uiBindings);\n  },\n\n  // normalize the values of passed hash with the views `ui` selectors.\n  // `{foo: \"@ui.bar\"}`\n  normalizeUIValues(hash, property) {\n    const uiBindings = this._getUIBindings();\n    return normalizeUIValues(hash, uiBindings, property);\n  },\n\n  _getUIBindings() {\n    const uiBindings = _.result(this, '_uiBindings');\n    return uiBindings || _.result(this, 'ui');\n  },\n\n  // This method binds the elements specified in the \"ui\" hash inside the view's code with\n  // the associated jQuery selectors.\n  _bindUIElements() {\n    if (!this.ui) { return; }\n\n    // store the ui hash in _uiBindings so they can be reset later\n    // and so re-rendering the view will be able to find the bindings\n    if (!this._uiBindings) {\n      this._uiBindings = this.ui;\n    }\n\n    // get the bindings result, as a function or otherwise\n    const bindings = _.result(this, '_uiBindings');\n\n    // empty the ui so we don't have anything to start with\n    this._ui = {};\n\n    // bind each of the selectors\n    _.each(bindings, (selector, key) => {\n      this._ui[key] = this.$(selector);\n    });\n\n    this.ui = this._ui;\n  },\n\n  _unbindUIElements() {\n    if (!this.ui || !this._uiBindings) { return; }\n\n    // delete all of the existing ui bindings\n    _.each(this.ui, ($el, name) => {\n      delete this.ui[name];\n    });\n\n    // reset the ui element to the original bindings configuration\n    this.ui = this._uiBindings;\n    delete this._uiBindings;\n    delete this._ui;\n  },\n\n  _getUI(name) {\n    return this._ui[name];\n  }\n};\n","// DomApi\n//  ---------\nimport _ from 'underscore';\nimport Backbone from 'backbone';\n\n// Performant method for returning the jQuery instance\nfunction getEl(el) {\n  return el instanceof Backbone.$ ? el : Backbone.$(el);\n}\n\n// Static setter\nexport function setDomApi(mixin) {\n  this.prototype.Dom = _.extend({}, this.prototype.Dom, mixin);\n  return this;\n}\n\nexport default {\n\n  // Returns a new HTML DOM node instance\n  createBuffer() {\n    return document.createDocumentFragment();\n  },\n\n  // Returns the document element for a given DOM element\n  getDocumentEl(el) {\n    return el.ownerDocument.documentElement;\n  },\n\n  // Lookup the `selector` string\n  // Selector may also be a DOM element\n  // Returns an array-like object of nodes\n  getEl(selector) {\n    return getEl(selector);\n  },\n\n  // Finds the `selector` string with the el\n  // Returns an array-like object of nodes\n  findEl(el, selector) {\n    return getEl(el).find(selector);\n  },\n\n  // Returns true if the el contains the node childEl\n  hasEl(el, childEl) {\n    return el.contains(childEl && childEl.parentNode);\n  },\n\n  // Detach `el` from the DOM without removing listeners\n  detachEl(el, _$el = getEl(el)) {\n    _$el.detach();\n  },\n\n  // Remove `oldEl` from the DOM and put `newEl` in its place\n  replaceEl(newEl, oldEl) {\n    if (newEl === oldEl) {\n      return;\n    }\n\n    const parent = oldEl.parentNode;\n\n    if (!parent) {\n      return;\n    }\n\n    parent.replaceChild(newEl, oldEl);\n  },\n\n  // Swaps the location of `el1` and `el2` in the DOM\n  swapEl(el1, el2) {\n    if (el1 === el2) {\n      return;\n    }\n\n    const parent1 = el1.parentNode;\n    const parent2 = el2.parentNode;\n\n    if (!parent1 || !parent2) {\n      return;\n    }\n\n    const next1 = el1.nextSibling;\n    const next2 = el2.nextSibling;\n\n    parent1.insertBefore(el2, next1);\n    parent2.insertBefore(el1, next2);\n  },\n\n  // Replace the contents of `el` with the HTML string of `html`\n  setContents(el, html, _$el = getEl(el)) {\n    _$el.html(html);\n  },\n\n  // Takes the DOM node `el` and appends the DOM node `contents`\n  // to the end of the element's contents.\n  appendContents(el, contents, {_$el = getEl(el), _$contents = getEl(contents)} = {}) {\n    _$el.append(_$contents);\n  },\n\n  // Does the el have child nodes\n  hasContents(el) {\n    return !!el && el.hasChildNodes();\n  },\n\n  // Remove the inner contents of `el` from the DOM while leaving\n  // `el` itself in the DOM.\n  detachContents(el, _$el = getEl(el)) {\n    _$el.contents().detach();\n  }\n};\n","// ViewMixin\n//  ---------\n\nimport Backbone from 'backbone';\nimport _ from 'underscore';\nimport BehaviorsMixin from './behaviors';\nimport CommonMixin from './common';\nimport DelegateEntityEventsMixin from './delegate-entity-events';\nimport TemplateRenderMixin from './template-render';\nimport TriggersMixin from './triggers';\nimport UIMixin from './ui';\nimport { isEnabled } from '../config/features';\nimport DomApi from '../config/dom';\n\n// MixinOptions\n// - behaviors\n// - childViewEventPrefix\n// - childViewEvents\n// - childViewTriggers\n// - collectionEvents\n// - modelEvents\n// - triggers\n// - ui\n\n\nconst ViewMixin = {\n  Dom: DomApi,\n\n  _isElAttached() {\n    return !!this.el && this.Dom.hasEl(this.Dom.getDocumentEl(this.el), this.el);\n  },\n\n  supportsRenderLifecycle: true,\n  supportsDestroyLifecycle: true,\n\n  _isDestroyed: false,\n\n  isDestroyed() {\n    return !!this._isDestroyed;\n  },\n\n  _isRendered: false,\n\n  isRendered() {\n    return !!this._isRendered;\n  },\n\n  _isAttached: false,\n\n  isAttached() {\n    return !!this._isAttached;\n  },\n\n  // Overriding Backbone.View's `delegateEvents` to handle\n  // `events` and `triggers`\n  delegateEvents(events) {\n    this._proxyBehaviorViewProperties();\n    this._buildEventProxies();\n\n    const combinedEvents = _.extend({},\n      this._getBehaviorEvents(),\n      this._getEvents(events),\n      this._getBehaviorTriggers(),\n      this._getTriggers()\n    );\n\n    Backbone.View.prototype.delegateEvents.call(this, combinedEvents);\n\n    return this;\n  },\n\n  // Allows Backbone.View events to utilize `@ui.` selectors\n  _getEvents(events) {\n    if (events) {\n      return this.normalizeUIKeys(events);\n    }\n\n    if (!this.events) { return; }\n\n    return this.normalizeUIKeys(_.result(this, 'events'));\n  },\n\n  // Configure `triggers` to forward DOM events to view\n  // events. `triggers: {\"click .foo\": \"do:foo\"}`\n  _getTriggers() {\n    if (!this.triggers) { return; }\n\n    // Allow `triggers` to be configured as a function\n    const triggers = this.normalizeUIKeys(_.result(this, 'triggers'));\n\n    // Configure the triggers, prevent default\n    // action and stop propagation of DOM events\n    return this._getViewTriggers(this, triggers);\n  },\n\n  // Handle `modelEvents`, and `collectionEvents` configuration\n  delegateEntityEvents() {\n    this._delegateEntityEvents(this.model, this.collection);\n\n    // bind each behaviors model and collection events\n    this._delegateBehaviorEntityEvents();\n\n    return this;\n  },\n\n  // Handle unbinding `modelEvents`, and `collectionEvents` configuration\n  undelegateEntityEvents() {\n    this._undelegateEntityEvents(this.model, this.collection);\n\n    // unbind each behaviors model and collection events\n    this._undelegateBehaviorEntityEvents();\n\n    return this;\n  },\n\n  // Handle destroying the view and its children.\n  destroy(options) {\n    if (this._isDestroyed || this._isDestroying) { return this; }\n    this._isDestroying = true;\n    const shouldTriggerDetach = this._isAttached && !this._disableDetachEvents;\n\n    this.triggerMethod('before:destroy', this, options);\n    if (shouldTriggerDetach) {\n      this.triggerMethod('before:detach', this);\n    }\n\n    // unbind UI elements\n    this.unbindUIElements();\n\n    // remove the view from the DOM\n    this._removeElement();\n\n    if (shouldTriggerDetach) {\n      this._isAttached = false;\n      this.triggerMethod('detach', this);\n    }\n\n    // remove children after the remove to prevent extra paints\n    this._removeChildren();\n\n    this._isDestroyed = true;\n    this._isRendered = false;\n\n    // Destroy behaviors after _isDestroyed flag\n    this._destroyBehaviors(options);\n\n    this._deleteEntityEventHandlers();\n\n    this.triggerMethod('destroy', this, options);\n    this._triggerEventOnBehaviors('destroy', this, options);\n\n    this.stopListening();\n\n    return this;\n  },\n\n  // Equates to this.$el.remove\n  _removeElement() {\n    this.$el.off().removeData();\n    this.Dom.detachEl(this.el, this.$el);\n  },\n\n  // This method binds the elements specified in the \"ui\" hash\n  bindUIElements() {\n    this._bindUIElements();\n    this._bindBehaviorUIElements();\n\n    return this;\n  },\n\n  // This method unbinds the elements specified in the \"ui\" hash\n  unbindUIElements() {\n    this._unbindUIElements();\n    this._unbindBehaviorUIElements();\n\n    return this;\n  },\n\n  getUI(name) {\n    return this._getUI(name);\n  },\n\n  // Cache `childViewEvents` and `childViewTriggers`\n  _buildEventProxies() {\n    this._childViewEvents = this.normalizeMethods(_.result(this, 'childViewEvents'));\n    this._childViewTriggers = _.result(this, 'childViewTriggers');\n    this._eventPrefix = this._getEventPrefix();\n  },\n\n  _getEventPrefix() {\n    const defaultPrefix = isEnabled('childViewEventPrefix') ? 'childview' : false;\n    const prefix = _.result(this, 'childViewEventPrefix', defaultPrefix);\n\n    return (prefix === false) ? prefix : prefix + ':';\n  },\n\n  _proxyChildViewEvents(view) {\n    if (this._childViewEvents || this._childViewTriggers || this._eventPrefix) {\n      this.listenTo(view, 'all', this._childViewEventHandler);\n    }\n  },\n\n  _childViewEventHandler(eventName, ...args) {\n    const childViewEvents = this._childViewEvents;\n\n    // call collectionView childViewEvent if defined\n    if (childViewEvents && childViewEvents[eventName]) {\n      childViewEvents[eventName].apply(this, args);\n    }\n\n    // use the parent view's proxyEvent handlers\n    const childViewTriggers = this._childViewTriggers;\n\n    // Call the event with the proxy name on the parent layout\n    if (childViewTriggers && childViewTriggers[eventName]) {\n      this.triggerMethod(childViewTriggers[eventName], ...args);\n    }\n\n    if (this._eventPrefix) {\n      this.triggerMethod(this._eventPrefix + eventName, ...args);\n    }\n  }\n};\n\n_.extend(ViewMixin, BehaviorsMixin, CommonMixin, DelegateEntityEventsMixin, TemplateRenderMixin, TriggersMixin, UIMixin);\n\nexport default ViewMixin;\n","export function renderView(view) {\n  if (view._isRendered) {\n    return;\n  }\n\n  if (!view.supportsRenderLifecycle) {\n    view.triggerMethod('before:render', view);\n  }\n\n  view.render();\n  view._isRendered = true;\n\n  if (!view.supportsRenderLifecycle) {\n    view.triggerMethod('render', view);\n  }\n}\n\nexport function destroyView(view, disableDetachEvents) {\n  if (view.destroy) {\n    // Attach flag for public destroy function internal check\n    view._disableDetachEvents = disableDetachEvents;\n    view.destroy();\n    return;\n  }\n\n  // Destroy for non-Marionette Views\n  if (!view.supportsDestroyLifecycle) {\n    view.triggerMethod('before:destroy', view);\n  }\n\n  const shouldTriggerDetach = view._isAttached && !disableDetachEvents;\n\n  if (shouldTriggerDetach) {\n    view.triggerMethod('before:detach', view);\n  }\n\n  view.remove();\n\n  if (shouldTriggerDetach) {\n    view._isAttached = false;\n    view.triggerMethod('detach', view);\n  }\n\n  view._isDestroyed = true;\n\n  if (!view.supportsDestroyLifecycle) {\n    view.triggerMethod('destroy', view);\n  }\n}\n","// Region\n// ------\n\nimport _ from 'underscore';\nimport Backbone from 'backbone';\nimport MarionetteError from './utils/error';\nimport extend from './utils/extend';\nimport monitorViewEvents from './common/monitor-view-events';\nimport { renderView, destroyView } from './common/view';\nimport CommonMixin from './mixins/common';\nimport View from './view';\nimport DomApi, { setDomApi } from './config/dom';\n\nconst classErrorName = 'RegionError';\n\nconst ClassOptions = [\n  'allowMissingEl',\n  'parentEl',\n  'replaceElement'\n];\n\nconst Region = function(options) {\n  this._setOptions(options, ClassOptions);\n\n  this.cid = _.uniqueId(this.cidPrefix);\n\n  // getOption necessary because options.el may be passed as undefined\n  this._initEl = this.el = this.getOption('el');\n\n  // Handle when this.el is passed in as a $ wrapped element.\n  this.el = this.el instanceof Backbone.$ ? this.el[0] : this.el;\n\n  this._setElement();\n\n  this.initialize.apply(this, arguments);\n};\n\nRegion.extend = extend;\nRegion.setDomApi = setDomApi;\n\n// Region Methods\n// --------------\n\n_.extend(Region.prototype, CommonMixin, {\n  Dom: DomApi,\n\n  cidPrefix: 'mnr',\n  replaceElement: false,\n  _isReplaced: false,\n  _isSwappingView: false,\n\n  // This is a noop method intended to be overridden\n  initialize() {},\n\n  // Displays a view instance inside of the region. If necessary handles calling the `render`\n  // method for you. Reads content directly from the `el` attribute.\n  show(view, options) {\n    if (!this._ensureElement(options)) {\n      return;\n    }\n\n    view = this._getView(view, options);\n\n    if (view === this.currentView) { return this; }\n\n    if (view._isShown) {\n      throw new MarionetteError({\n        name: classErrorName,\n        message: 'View is already shown in a Region or CollectionView',\n        url: 'marionette.collectionview.html#region-viewAlreadyShown'\n      });\n    }\n\n    this._isSwappingView = !!this.currentView;\n\n    this.triggerMethod('before:show', this, view, options);\n\n    // Assume an attached view is already in the region for pre-existing DOM\n    if (this.currentView || !view._isAttached) {\n      this.empty(options);\n    }\n\n    this._setupChildView(view);\n\n    this.currentView = view;\n\n    renderView(view);\n\n    this._attachView(view, options);\n\n    this.triggerMethod('show', this, view, options);\n\n    this._isSwappingView = false;\n\n    return this;\n  },\n\n  _setElement() {\n    if (!this.el) {\n      throw new MarionetteError({\n        name: classErrorName,\n        message: 'An \"el\" must be specified for a region.',\n        url: 'marionette.region.html#additional-options'\n      });\n    }\n\n    this.$el = this.getEl(this.el);\n\n    if (this.$el.length) {\n      this.el = this.$el[0];\n    }\n\n    // Make sure the $el contains only the el\n    if (this.$el.length > 1) {\n      this.$el = this.Dom.getEl(this.el);\n    }\n  },\n\n  // Set the `el` of the region and move any current view to the new `el`.\n  setElement(el) {\n    if (el === this.el) { return this; }\n\n    const shouldReplace = this._isReplaced;\n\n    this._restoreEl();\n\n    this.el = el;\n\n    this._setElement();\n\n    if (this.currentView) {\n      const view = this.currentView;\n\n      if (shouldReplace) {\n        this._replaceEl(view);\n      } else {\n        this.attachHtml(view);\n      }\n    }\n\n    return this;\n  },\n\n  _setupChildView(view) {\n    monitorViewEvents(view);\n\n    this._proxyChildViewEvents(view);\n\n    // We need to listen for if a view is destroyed in a way other than through the region.\n    // If this happens we need to remove the reference to the currentView since once a view\n    // has been destroyed we can not reuse it.\n    view.on('destroy', this._empty, this);\n  },\n\n  _proxyChildViewEvents(view) {\n    const parentView = this._parentView;\n\n    if (!parentView) { return; }\n\n    parentView._proxyChildViewEvents(view);\n  },\n\n  // If the regions parent view is not monitoring its attach/detach events\n  _shouldDisableMonitoring() {\n    return this._parentView && this._parentView.monitorViewEvents === false;\n  },\n\n  _isElAttached() {\n    return this.Dom.hasEl(this.Dom.getDocumentEl(this.el), this.el);\n  },\n\n  _attachView(view, { replaceElement } = {}) {\n    const shouldTriggerAttach = !view._isAttached && this._isElAttached() && !this._shouldDisableMonitoring();\n    const shouldReplaceEl = typeof replaceElement === 'undefined' ? !!_.result(this, 'replaceElement') : !!replaceElement;\n\n    if (shouldTriggerAttach) {\n      view.triggerMethod('before:attach', view);\n    }\n\n    if (shouldReplaceEl) {\n      this._replaceEl(view);\n    } else {\n      this.attachHtml(view);\n    }\n\n    if (shouldTriggerAttach) {\n      view._isAttached = true;\n      view.triggerMethod('attach', view);\n    }\n\n    // Corresponds that view is shown in a marionette Region or CollectionView\n    view._isShown = true;\n  },\n\n  _ensureElement(options = {}) {\n    if (!_.isObject(this.el)) {\n      this._setElement();\n    }\n\n    if (!this.$el || this.$el.length === 0) {\n      const allowMissingEl = typeof options.allowMissingEl === 'undefined' ? !!_.result(this, 'allowMissingEl') : !!options.allowMissingEl;\n\n      if (allowMissingEl) {\n        return false;\n      } else {\n        throw new MarionetteError({\n          name: classErrorName,\n          message: `An \"el\" must exist in DOM for this region ${this.cid}`,\n          url: 'marionette.region.html#additional-options'\n        });\n      }\n    }\n    return true;\n  },\n\n  _getView(view) {\n    if (!view) {\n      throw new MarionetteError({\n        name: classErrorName,\n        message: 'The view passed is undefined and therefore invalid. You must pass a view instance to show.',\n        url: 'marionette.region.html#showing-a-view'\n      });\n    }\n\n    if (view._isDestroyed) {\n      throw new MarionetteError({\n        name: classErrorName,\n        message: `View (cid: \"${view.cid}\") has already been destroyed and cannot be used.`,\n        url: 'marionette.region.html#showing-a-view'\n      });\n    }\n\n    if (view instanceof Backbone.View) {\n      return view;\n    }\n\n    const viewOptions = this._getViewOptions(view);\n\n    return new View(viewOptions);\n  },\n\n  // This allows for a template or a static string to be\n  // used as a template\n  _getViewOptions(viewOptions) {\n    if (_.isFunction(viewOptions)) {\n      return { template: viewOptions };\n    }\n\n    if (_.isObject(viewOptions)) {\n      return viewOptions;\n    }\n\n    const template = function() { return viewOptions; };\n\n    return { template };\n  },\n\n  // Override this method to change how the region finds the DOM element that it manages. Return\n  // a jQuery selector object scoped to a provided parent el or the document if none exists.\n  getEl(el) {\n    const context = _.result(this, 'parentEl');\n\n    if (context && _.isString(el)) {\n      return this.Dom.findEl(context, el);\n    }\n\n    return this.Dom.getEl(el);\n  },\n\n  _replaceEl(view) {\n    // Always restore the el to ensure the regions el is present before replacing\n    this._restoreEl();\n\n    view.on('before:destroy', this._restoreEl, this);\n\n    this.Dom.replaceEl(view.el, this.el);\n\n    this._isReplaced = true;\n  },\n\n  // Restore the region's element in the DOM.\n  _restoreEl() {\n    // There is nothing to replace\n    if (!this._isReplaced) {\n      return;\n    }\n\n    const view = this.currentView;\n\n    if (!view) {\n      return;\n    }\n\n    this._detachView(view);\n\n    this._isReplaced = false;\n  },\n\n  // Check to see if the region's el was replaced.\n  isReplaced() {\n    return !!this._isReplaced;\n  },\n\n  // Check to see if a view is being swapped by another\n  isSwappingView() {\n    return !!this._isSwappingView;\n  },\n\n  // Override this method to change how the new view is appended to the `$el` that the\n  // region is managing\n  attachHtml(view) {\n    this.Dom.appendContents(this.el, view.el, {_$el: this.$el, _$contents: view.$el});\n  },\n\n  // Destroy the current view, if there is one. If there is no current view,\n  // it will detach any html inside the region's `el`.\n  empty(options = { allowMissingEl: true }) {\n    const view = this.currentView;\n\n    // If there is no view in the region we should only detach current html\n    if (!view) {\n      if (this._ensureElement(options)) {\n        this.detachHtml();\n      }\n      return this;\n    }\n\n    this._empty(view, true);\n    return this;\n  },\n\n  _empty(view, shouldDestroy) {\n    view.off('destroy', this._empty, this);\n    this.triggerMethod('before:empty', this, view);\n\n    this._restoreEl();\n\n    delete this.currentView;\n\n    if (!view._isDestroyed) {\n      if (shouldDestroy) {\n        this.removeView(view);\n      } else {\n        this._detachView(view);\n      }\n      view._isShown = false;\n      this._stopChildViewEvents(view);\n    }\n\n    this.triggerMethod('empty', this, view);\n  },\n\n  _stopChildViewEvents(view) {\n    const parentView = this._parentView;\n\n    if (!parentView) { return; }\n\n    this._parentView.stopListening(view);\n  },\n\n  // Non-Marionette safe view.destroy\n  destroyView(view) {\n    if (view._isDestroyed) {\n      return view;\n    }\n\n    destroyView(view, this._shouldDisableMonitoring());\n    return view;\n  },\n\n  // Override this method to determine what happens when the view\n  // is removed from the region when the view is not being detached\n  removeView(view) {\n    this.destroyView(view);\n  },\n\n  // Empties the Region without destroying the view\n  // Returns the detached view\n  detachView() {\n    const view = this.currentView;\n\n    if (!view) {\n      return;\n    }\n\n    this._empty(view);\n\n    return view;\n  },\n\n  _detachView(view) {\n    const shouldTriggerDetach = view._isAttached && !this._shouldDisableMonitoring();\n    const shouldRestoreEl = this._isReplaced;\n    if (shouldTriggerDetach) {\n      view.triggerMethod('before:detach', view);\n    }\n\n    if (shouldRestoreEl) {\n      this.Dom.replaceEl(this.el, view.el);\n    } else {\n      this.detachHtml();\n    }\n\n    if (shouldTriggerDetach) {\n      view._isAttached = false;\n      view.triggerMethod('detach', view);\n    }\n  },\n\n  // Override this method to change how the region detaches current content\n  detachHtml() {\n    this.Dom.detachContents(this.el, this.$el);\n  },\n\n  // Checks whether a view is currently present within the region. Returns `true` if there is\n  // and `false` if no view is present.\n  hasView() {\n    return !!this.currentView;\n  },\n\n  // Reset the region by destroying any existing view and clearing out the cached `$el`.\n  // The next time a view is shown via this region, the region will re-query the DOM for\n  // the region's `el`.\n  reset(options) {\n    this.empty(options);\n\n    this.el = this._initEl;\n\n    delete this.$el;\n    return this;\n  },\n\n  _isDestroyed: false,\n\n  isDestroyed() {\n    return this._isDestroyed;\n  },\n\n  // Destroy the region, remove any child view\n  // and remove the region from any associated view\n  destroy(options) {\n    if (this._isDestroyed) { return this; }\n\n    this.triggerMethod('before:destroy', this, options);\n    this._isDestroyed = true;\n\n    this.reset(options);\n\n    if (this._name) {\n      this._parentView._removeReferences(this._name);\n    }\n    delete this._parentView;\n    delete this._name;\n\n    this.triggerMethod('destroy', this, options);\n    this.stopListening();\n\n    return this;\n  }\n});\n\nexport default Region;\n","import _ from 'underscore';\nimport MarionetteError from '../utils/error';\nimport Region from '../region';\n\n// return the region instance from the definition\nexport default function(definition, defaults) {\n  if (definition instanceof Region) {\n    return definition;\n  }\n\n  if (_.isString(definition)) {\n    return buildRegionFromObject(defaults, { el: definition });\n  }\n\n  if (_.isFunction(definition)) {\n    return buildRegionFromObject(defaults, { regionClass: definition });\n  }\n\n  if (_.isObject(definition)) {\n    return buildRegionFromObject(defaults, definition);\n  }\n\n  throw new MarionetteError({\n    message: 'Improper region configuration type.',\n    url: 'marionette.region.html#defining-regions'\n  });\n}\n\nfunction buildRegionFromObject(defaults, definition) {\n  const options = _.extend({}, defaults, definition);\n\n  const RegionClass = options.regionClass\n\n  delete options.regionClass;\n\n  return new RegionClass(options);\n}\n","import _ from 'underscore';\nimport _invoke from '../utils/invoke';\nimport buildRegion from '../common/build-region';\nimport Region from '../region';\n\n// MixinOptions\n// - regions\n// - regionClass\n\nexport default {\n  regionClass: Region,\n\n  // Internal method to initialize the regions that have been defined in a\n  // `regions` attribute on this View.\n  _initRegions() {\n\n    // init regions hash\n    this.regions = this.regions || {};\n    this._regions = {};\n\n    this.addRegions(_.result(this, 'regions'));\n  },\n\n  // Internal method to re-initialize all of the regions by updating\n  // the `el` that they point to\n  _reInitRegions() {\n    _invoke(this._regions, 'reset');\n  },\n\n  // Add a single region, by name, to the View\n  addRegion(name, definition) {\n    const regions = {};\n    regions[name] = definition;\n    return this.addRegions(regions)[name];\n  },\n\n  // Add multiple regions as a {name: definition, name2: def2} object literal\n  addRegions(regions) {\n    // If there's nothing to add, stop here.\n    if (_.isEmpty(regions)) {\n      return;\n    }\n\n    // Normalize region selectors hash to allow\n    // a user to use the @ui. syntax.\n    regions = this.normalizeUIValues(regions, 'el');\n\n    // Add the regions definitions to the regions property\n    this.regions = _.extend({}, this.regions, regions);\n\n    return this._addRegions(regions);\n  },\n\n  // internal method to build and add regions\n  _addRegions(regionDefinitions) {\n    const defaults = {\n      regionClass: this.regionClass,\n      parentEl: _.partial(_.result, this, 'el')\n    };\n\n    return _.reduce(regionDefinitions, (regions, definition, name) => {\n      regions[name] = buildRegion(definition, defaults);\n      this._addRegion(regions[name], name);\n      return regions;\n    }, {});\n  },\n\n  _addRegion(region, name) {\n    this.triggerMethod('before:add:region', this, name, region);\n\n    region._parentView = this;\n    region._name = name;\n\n    this._regions[name] = region;\n\n    this.triggerMethod('add:region', this, name, region);\n  },\n\n  // Remove a single region from the View, by name\n  removeRegion(name) {\n    const region = this._regions[name];\n\n    this._removeRegion(region, name);\n\n    return region;\n  },\n\n  // Remove all regions from the View\n  removeRegions() {\n    const regions = this._getRegions();\n\n    _.each(this._regions, this._removeRegion.bind(this));\n\n    return regions;\n  },\n\n  _removeRegion(region, name) {\n    this.triggerMethod('before:remove:region', this, name, region);\n\n    region.destroy();\n\n    this.triggerMethod('remove:region', this, name, region);\n  },\n\n  // Called in a region's destroy\n  _removeReferences(name) {\n    delete this.regions[name];\n    delete this._regions[name];\n  },\n\n  // Empty all regions in the region manager, but\n  // leave them attached\n  emptyRegions() {\n    const regions = this.getRegions();\n    _invoke(regions, 'empty');\n    return regions;\n  },\n\n  // Checks to see if view contains region\n  // Accepts the region name\n  // hasRegion('main')\n  hasRegion(name) {\n    return !!this.getRegion(name);\n  },\n\n  // Provides access to regions\n  // Accepts the region name\n  // getRegion('main')\n  getRegion(name) {\n    if (!this._isRendered) {\n      this.render();\n    }\n    return this._regions[name];\n  },\n\n  _getRegions() {\n    return _.clone(this._regions);\n  },\n\n  // Get all regions\n  getRegions() {\n    if (!this._isRendered) {\n      this.render();\n    }\n    return this._getRegions();\n  },\n\n  showChildView(name, view, options) {\n    const region = this.getRegion(name);\n    region.show(view, options);\n    return view;\n  },\n\n  detachChildView(name) {\n    return this.getRegion(name).detachView();\n  },\n\n  getChildView(name) {\n    return this.getRegion(name).currentView;\n  }\n\n};\n","// Static setter for the renderer\nexport function setRenderer(renderer) {\n  this.prototype._renderHtml = renderer;\n  return this;\n}\n","// View\n// ---------\n\nimport _ from 'underscore';\nimport Backbone from 'backbone';\nimport monitorViewEvents from './common/monitor-view-events';\nimport ViewMixin from './mixins/view';\nimport RegionsMixin from './mixins/regions';\nimport { setDomApi } from './config/dom';\nimport { setRenderer } from './config/renderer';\n\nconst ClassOptions = [\n  'behaviors',\n  'childViewEventPrefix',\n  'childViewEvents',\n  'childViewTriggers',\n  'collectionEvents',\n  'events',\n  'modelEvents',\n  'regionClass',\n  'regions',\n  'template',\n  'templateContext',\n  'triggers',\n  'ui'\n];\n\n// Used by _getImmediateChildren\nfunction childReducer(children, region) {\n  if (region.currentView) {\n    children.push(region.currentView);\n  }\n\n  return children;\n}\n\n// The standard view. Includes view events, automatic rendering\n// templates, nested views, and more.\nconst View = Backbone.View.extend({\n\n  constructor(options) {\n    this._setOptions(options, ClassOptions);\n\n    monitorViewEvents(this);\n\n    this._initBehaviors();\n    this._initRegions();\n\n    Backbone.View.prototype.constructor.apply(this, arguments);\n\n    this.delegateEntityEvents();\n\n    this._triggerEventOnBehaviors('initialize', this, options);\n  },\n\n  // Overriding Backbone.View's `setElement` to handle\n  // if an el was previously defined. If so, the view might be\n  // rendered or attached on setElement.\n  setElement() {\n    Backbone.View.prototype.setElement.apply(this, arguments);\n\n    this._isRendered = this.Dom.hasContents(this.el);\n    this._isAttached = this._isElAttached();\n\n    if (this._isRendered) {\n      this.bindUIElements();\n    }\n\n    return this;\n  },\n\n  // If a template is available, renders it into the view's `el`\n  // Re-inits regions and binds UI.\n  render() {\n    const template = this.getTemplate();\n\n    if (template === false || this._isDestroyed) { return this; }\n\n    this.triggerMethod('before:render', this);\n\n    // If this is not the first render call, then we need to\n    // re-initialize the `el` for each region\n    if (this._isRendered) {\n      this._reInitRegions();\n    }\n\n    this._renderTemplate(template);\n    this.bindUIElements();\n\n    this._isRendered = true;\n    this.triggerMethod('render', this);\n\n    return this;\n  },\n\n  // called by ViewMixin destroy\n  _removeChildren() {\n    this.removeRegions();\n  },\n\n  _getImmediateChildren() {\n    return _.reduce(this._regions, childReducer, []);\n  }\n}, {\n  setRenderer,\n  setDomApi\n});\n\n_.extend(View.prototype, ViewMixin, RegionsMixin);\n\nexport default View;\n","import _ from 'underscore';\n\n// Provide a container to store, retrieve and\n// shut down child views.\nconst Container = function() {\n  this._init();\n};\n\n// Mix in methods from Underscore, for iteration, and other\n// collection related features.\n// Borrowing this code from Backbone.Collection:\n// https://github.com/jashkenas/backbone/blob/1.1.2/backbone.js#L962\nconst methods = ['forEach', 'each', 'map', 'find', 'detect', 'filter',\n  'select', 'reject', 'every', 'all', 'some', 'any', 'include',\n  'contains', 'invoke', 'toArray', 'first', 'initial', 'rest',\n  'last', 'without', 'isEmpty', 'pluck', 'reduce', 'partition'];\n\n_.each(methods, function(method) {\n  Container.prototype[method] = function(...args) {\n    return _[method].apply(_, [this._views].concat(args));\n  };\n});\n\nfunction stringComparator(comparator, view) {\n  return view.model && view.model.get(comparator);\n}\n\n// Container Methods\n// -----------------\n\n_.extend(Container.prototype, {\n\n  // Initializes an empty container\n  _init() {\n    this._views = [];\n    this._viewsByCid = {};\n    this._indexByModel = {};\n    this._updateLength();\n  },\n\n  // Add a view to this container. Stores the view\n  // by `cid` and makes it searchable by the model\n  // cid (and model itself). Additionally it stores\n  // the view by index in the _views array\n  _add(view, index = this._views.length) {\n    this._addViewIndexes(view);\n\n    // add to end by default\n    this._views.splice(index, 0, view);\n\n    this._updateLength();\n  },\n\n  _addViewIndexes(view) {\n    // store the view\n    this._viewsByCid[view.cid] = view;\n\n    // index it by model\n    if (view.model) {\n      this._indexByModel[view.model.cid] = view;\n    }\n  },\n\n  // Sort (mutate) and return the array of the child views.\n  _sort(comparator, context) {\n    if (typeof comparator === 'string') {\n      comparator = _.partial(stringComparator, comparator);\n      return this._sortBy(comparator);\n    }\n\n    if (comparator.length === 1) {\n      return this._sortBy(comparator.bind(context));\n    }\n\n    return this._views.sort(comparator.bind(context));\n  },\n\n  // Makes `_.sortBy` mutate the array to match `this._views.sort`\n  _sortBy(comparator) {\n    const sortedViews = _.sortBy(this._views, comparator);\n\n    this._set(sortedViews);\n\n    return sortedViews;\n  },\n\n  // Replace array contents without overwriting the reference.\n  // Should not add/remove views\n  _set(views, shouldReset) {\n    this._views.length = 0;\n\n    this._views.push.apply(this._views, views.slice(0));\n\n    if (shouldReset) {\n      this._viewsByCid = {};\n      this._indexByModel = {};\n\n      _.each(views, this._addViewIndexes.bind(this));\n\n      this._updateLength();\n    }\n  },\n\n  // Swap views by index\n  _swap(view1, view2) {\n    const view1Index = this.findIndexByView(view1);\n    const view2Index = this.findIndexByView(view2);\n\n    if (view1Index === -1 || view2Index === -1) {\n      return;\n    }\n\n    const swapView = this._views[view1Index];\n    this._views[view1Index] = this._views[view2Index];\n    this._views[view2Index] = swapView;\n  },\n\n  // Find a view by the model that was attached to it.\n  // Uses the model's `cid` to find it.\n  findByModel(model) {\n    return this.findByModelCid(model.cid);\n  },\n\n  // Find a view by the `cid` of the model that was attached to it.\n  findByModelCid(modelCid) {\n    return this._indexByModel[modelCid];\n  },\n\n  // Find a view by index.\n  findByIndex(index) {\n    return this._views[index];\n  },\n\n  // Find the index of a view instance\n  findIndexByView(view) {\n    return this._views.indexOf(view);\n  },\n\n  // Retrieve a view by its `cid` directly\n  findByCid(cid) {\n    return this._viewsByCid[cid];\n  },\n\n  hasView(view) {\n    return !!this.findByCid(view.cid);\n  },\n\n  // Remove a view and clean up index references.\n  _remove(view) {\n    if (!this._viewsByCid[view.cid]) {\n      return;\n    }\n\n    // delete model index\n    if (view.model) {\n      delete this._indexByModel[view.model.cid];\n    }\n\n    // remove the view from the container\n    delete this._viewsByCid[view.cid];\n\n    const index = this.findIndexByView(view);\n    this._views.splice(index, 1);\n\n    this._updateLength();\n  },\n\n  // Update the `.length` attribute on this container\n  _updateLength() {\n    this.length = this._views.length;\n  }\n});\n\nexport default Container;\n","// Collection View\n// ---------------\n\nimport _ from 'underscore';\nimport Backbone from 'backbone';\nimport MarionetteError from './utils/error';\nimport { renderView, destroyView } from './common/view';\nimport monitorViewEvents from './common/monitor-view-events';\nimport ChildViewContainer from './child-view-container';\nimport Region from './region';\nimport ViewMixin from './mixins/view';\nimport { setDomApi } from './config/dom';\nimport { setRenderer } from './config/renderer';\n\nconst classErrorName = 'CollectionViewError';\n\nconst ClassOptions = [\n  'behaviors',\n  'childView',\n  'childViewContainer',\n  'childViewEventPrefix',\n  'childViewEvents',\n  'childViewOptions',\n  'childViewTriggers',\n  'collectionEvents',\n  'emptyView',\n  'emptyViewOptions',\n  'events',\n  'modelEvents',\n  'sortWithCollection',\n  'template',\n  'templateContext',\n  'triggers',\n  'ui',\n  'viewComparator',\n  'viewFilter'\n];\n\n// A view that iterates over a Backbone.Collection\n// and renders an individual child view for each model.\nconst CollectionView = Backbone.View.extend({\n  // flag for maintaining the sorted order of the collection\n  sortWithCollection: true,\n\n  // constructor\n  constructor(options) {\n    this._setOptions(options, ClassOptions);\n\n    monitorViewEvents(this);\n\n    this._initChildViewStorage();\n    this._initBehaviors();\n\n    Backbone.View.prototype.constructor.apply(this, arguments);\n\n    // Init empty region\n    this.getEmptyRegion();\n\n    this.delegateEntityEvents();\n\n    this._triggerEventOnBehaviors('initialize', this, options);\n  },\n\n  // Internal method to set up the `children` object for storing all of the child views\n  // `_children` represents all child views\n  // `children` represents only views filtered to be shown\n  _initChildViewStorage() {\n    this._children = new ChildViewContainer();\n    this.children = new ChildViewContainer();\n  },\n\n  // Create an region to show the emptyView\n  getEmptyRegion() {\n    const $emptyEl = this.$container || this.$el;\n\n    if (this._emptyRegion && !this._emptyRegion.isDestroyed()) {\n      this._emptyRegion.setElement($emptyEl[0]);\n      return this._emptyRegion;\n    }\n\n    this._emptyRegion = new Region({ el: $emptyEl[0], replaceElement: false });\n\n    this._emptyRegion._parentView = this;\n\n    return this._emptyRegion;\n  },\n\n  // Configured the initial events that the collection view binds to.\n  _initialEvents() {\n    if (this._isRendered) { return; }\n\n    this.listenTo(this.collection, {\n      'sort': this._onCollectionSort,\n      'reset': this._onCollectionReset,\n      'update': this._onCollectionUpdate\n    });\n  },\n\n  // Internal method. This checks for any changes in the order of the collection.\n  // If the index of any view doesn't match, it will re-sort.\n  _onCollectionSort(collection, { add, merge, remove }) {\n    if (!this.sortWithCollection || this.viewComparator === false) {\n      return;\n    }\n\n    // If the data is changing we will handle the sort later in `_onCollectionUpdate`\n    if (add || remove || merge) {\n      return;\n    }\n\n    // If the only thing happening here is sorting, sort.\n    this.sort();\n  },\n\n  _onCollectionReset() {\n    this._destroyChildren();\n\n    this._addChildModels(this.collection.models);\n\n    this.sort();\n  },\n\n  // Handle collection update model additions and  removals\n  _onCollectionUpdate(collection, options) {\n    const changes = options.changes;\n\n    // Remove first since it'll be a shorter array lookup.\n    const removedViews = changes.removed.length && this._removeChildModels(changes.removed);\n\n    this._addedViews = changes.added.length && this._addChildModels(changes.added);\n\n    this._detachChildren(removedViews);\n\n    this.sort();\n\n    // Destroy removed child views after all of the render is complete\n    this._removeChildViews(removedViews);\n  },\n\n  _removeChildModels(models) {\n    return _.reduce(models, (views, model) => {\n      const removeView = this._removeChildModel(model);\n\n      if (removeView) { views.push(removeView); }\n\n      return views;\n    }, []);\n  },\n\n  _removeChildModel(model) {\n    const view = this._children.findByModel(model);\n\n    if (view) { this._removeChild(view); }\n\n    return view;\n  },\n\n  _removeChild(view) {\n    this.triggerMethod('before:remove:child', this, view);\n\n    this.children._remove(view);\n    this._children._remove(view);\n\n    this.triggerMethod('remove:child', this, view);\n  },\n\n  // Added views are returned for consistency with _removeChildModels\n  _addChildModels(models) {\n    return _.map(models, this._addChildModel.bind(this));\n  },\n\n  _addChildModel(model) {\n    const view = this._createChildView(model);\n\n    this._addChild(view);\n\n    return view;\n  },\n\n  _createChildView(model) {\n    const ChildView = this._getChildView(model);\n    const childViewOptions = this._getChildViewOptions(model);\n    const view = this.buildChildView(model, ChildView, childViewOptions);\n\n    return view;\n  },\n\n  _addChild(view, index) {\n    this.triggerMethod('before:add:child', this, view);\n\n    this._setupChildView(view);\n    this._children._add(view, index);\n    this.children._add(view, index);\n\n    this.triggerMethod('add:child', this, view);\n  },\n\n  // Retrieve the `childView` class\n  // The `childView` property can be either a view class or a function that\n  // returns a view class. If it is a function, it will receive the model that\n  // will be passed to the view instance (created from the returned view class)\n  _getChildView(child) {\n    let childView = this.childView;\n\n    if (!childView) {\n      throw new MarionetteError({\n        name: classErrorName,\n        message: 'A \"childView\" must be specified',\n        url: 'marionette.collectionview.html#collectionviews-childview'\n      });\n    }\n\n    childView = this._getView(childView, child);\n\n    if (!childView) {\n      throw new MarionetteError({\n        name: classErrorName,\n        message: '\"childView\" must be a view class or a function that returns a view class',\n        url: 'marionette.collectionview.html#collectionviews-childview'\n      });\n    }\n\n    return childView;\n  },\n\n  // First check if the `view` is a view class (the common case)\n  // Then check if it's a function (which we assume that returns a view class)\n  _getView(view, child) {\n    if (view.prototype instanceof Backbone.View || view === Backbone.View) {\n      return view;\n    } else if (_.isFunction(view)) {\n      return view.call(this, child);\n    }\n  },\n\n  _getChildViewOptions(child) {\n    if (_.isFunction(this.childViewOptions)) {\n      return this.childViewOptions(child);\n    }\n\n    return this.childViewOptions;\n  },\n\n  // Build a `childView` for a model in the collection.\n  // Override to customize the build\n  buildChildView(child, ChildViewClass, childViewOptions) {\n    const options = _.extend({model: child}, childViewOptions);\n    return new ChildViewClass(options);\n  },\n\n  _setupChildView(view) {\n    monitorViewEvents(view);\n\n    // We need to listen for if a view is destroyed in a way other\n    // than through the CollectionView.\n    // If this happens we need to remove the reference to the view\n    // since once a view has been destroyed we can not reuse it.\n    view.on('destroy', this.removeChildView, this);\n\n    // set up the child view event forwarding\n    this._proxyChildViewEvents(view);\n  },\n\n  // used by ViewMixin's `_childViewEventHandler`\n  _getImmediateChildren() {\n    return this.children._views;\n  },\n\n  // Overriding Backbone.View's `setElement` to handle\n  // if an el was previously defined. If so, the view might be\n  // attached on setElement.\n  setElement() {\n    Backbone.View.prototype.setElement.apply(this, arguments);\n\n    this._isAttached = this._isElAttached();\n\n    return this;\n  },\n\n  // Render children views.\n  render() {\n    if (this._isDestroyed) { return this; }\n    this.triggerMethod('before:render', this);\n\n    this._destroyChildren();\n\n    if (this.collection) {\n      this._addChildModels(this.collection.models);\n      this._initialEvents();\n    }\n\n    const template = this.getTemplate();\n\n    if (template) {\n      this._renderTemplate(template);\n      this.bindUIElements();\n    }\n    this._getChildViewContainer();\n    this.sort();\n\n    this._isRendered = true;\n\n    this.triggerMethod('render', this);\n    return this;\n  },\n\n  // Get a container within the template to add the children within\n  _getChildViewContainer() {\n    const childViewContainer = _.result(this, 'childViewContainer');\n    this.$container = childViewContainer ? this.$(childViewContainer) : this.$el;\n\n    if (!this.$container.length) {\n      throw new MarionetteError({\n        name: classErrorName,\n        message: `The specified \"childViewContainer\" was not found: ${childViewContainer}`,\n        url: 'marionette.collectionview.html#defining-the-childviewcontainer'\n      });\n    }\n  },\n\n  // Sorts the children then filters and renders the results.\n  sort() {\n    this._sortChildren();\n\n    this.filter();\n\n    return this;\n  },\n\n  // Sorts views by viewComparator and sets the children to the new order\n  _sortChildren() {\n    if (!this._children.length) { return; }\n\n    let viewComparator = this.getComparator();\n\n    if (!viewComparator) { return; }\n\n    // If children are sorted prevent added to end perf\n    delete this._addedViews;\n\n    this.triggerMethod('before:sort', this);\n\n    this._children._sort(viewComparator, this);\n\n    this.triggerMethod('sort', this);\n  },\n\n  // Sets the view's `viewComparator` and applies the sort if the view is ready.\n  // To prevent the render pass `{ preventRender: true }` as the 2nd argument.\n  setComparator(comparator, {preventRender} = {}) {\n    const comparatorChanged = this.viewComparator !== comparator;\n    const shouldSort = comparatorChanged && !preventRender;\n\n    this.viewComparator = comparator;\n\n    if (shouldSort) {\n      this.sort();\n    }\n\n    return this;\n  },\n\n  // Clears the `viewComparator` and follows the same rules for rendering as `setComparator`.\n  removeComparator(options) {\n    return this.setComparator(null, options);\n  },\n\n  // If viewComparator is overriden it will be returned here.\n  // Additionally override this function to provide custom\n  // viewComparator logic\n  getComparator() {\n    if (this.viewComparator) { return this.viewComparator }\n\n    if (!this.sortWithCollection || this.viewComparator === false || !this.collection) {\n      return false;\n    }\n\n    return this._viewComparator;\n  },\n\n  // Default internal view comparator that order the views by\n  // the order of the collection\n  _viewComparator(view) {\n    return this.collection.indexOf(view.model);\n  },\n\n  // This method filters the children views and renders the results\n  filter() {\n    if (this._isDestroyed) { return this; }\n\n    this._filterChildren();\n\n    this._renderChildren();\n\n    return this;\n  },\n\n  _filterChildren() {\n    if (!this._children.length) { return; }\n\n    const viewFilter = this._getFilter();\n\n    if (!viewFilter) {\n      const shouldReset = this.children.length !== this._children.length;\n\n      this.children._set(this._children._views, shouldReset);\n\n      return;\n    }\n\n    // If children are filtered prevent added to end perf\n    delete this._addedViews;\n\n    this.triggerMethod('before:filter', this);\n\n    const attachViews = [];\n    const detachViews = [];\n\n    _.each(this._children._views, (view, key, children) => {\n      (viewFilter.call(this, view, key, children) ? attachViews : detachViews).push(view);\n    });\n\n    this._detachChildren(detachViews);\n\n    // reset children\n    this.children._set(attachViews, true);\n\n    this.triggerMethod('filter', this, attachViews, detachViews);\n  },\n\n  // This method returns a function for the viewFilter\n  _getFilter() {\n    const viewFilter = this.getFilter();\n\n    if (!viewFilter) { return false; }\n\n    if (_.isFunction(viewFilter)) {\n      return viewFilter;\n    }\n\n    // Support filter predicates `{ fooFlag: true }`\n    if (_.isObject(viewFilter)) {\n      const matcher = _.matches(viewFilter);\n      return function(view) {\n        return matcher(view.model && view.model.attributes);\n      };\n    }\n\n    // Filter by model attribute\n    if (_.isString(viewFilter)) {\n      return function(view) {\n        return view.model && view.model.get(viewFilter);\n      };\n    }\n\n    throw new MarionetteError({\n      name: classErrorName,\n      message: '\"viewFilter\" must be a function, predicate object literal, a string indicating a model attribute, or falsy',\n      url: 'marionette.collectionview.html#defining-the-viewfilter'\n    });\n  },\n\n  // Override this function to provide custom\n  // viewFilter logic\n  getFilter() {\n    return this.viewFilter;\n  },\n\n  // Sets the view's `viewFilter` and applies the filter if the view is ready.\n  // To prevent the render pass `{ preventRender: true }` as the 2nd argument.\n  setFilter(filter, {preventRender} = {}) {\n    const filterChanged = this.viewFilter !== filter;\n    const shouldRender = filterChanged && !preventRender;\n\n    this.viewFilter = filter;\n\n    if (shouldRender) {\n      this.filter();\n    }\n\n    return this;\n  },\n\n  // Clears the `viewFilter` and follows the same rules for rendering as `setFilter`.\n  removeFilter(options) {\n    return this.setFilter(null, options);\n  },\n\n  _detachChildren(detachingViews) {\n    _.each(detachingViews, this._detachChildView.bind(this));\n  },\n\n  _detachChildView(view) {\n    const shouldTriggerDetach = view._isAttached && this.monitorViewEvents !== false;\n    if (shouldTriggerDetach) {\n      view.triggerMethod('before:detach', view);\n    }\n\n    this.detachHtml(view);\n\n    if (shouldTriggerDetach) {\n      view._isAttached = false;\n      view.triggerMethod('detach', view);\n    }\n\n    view._isShown = false;\n  },\n\n  // Override this method to change how the collectionView detaches a child view\n  detachHtml(view) {\n    this.Dom.detachEl(view.el, view.$el);\n  },\n\n  _renderChildren() {\n    // If there are unrendered views prevent add to end perf\n    if (this._hasUnrenderedViews) {\n      delete this._addedViews;\n      delete this._hasUnrenderedViews;\n    }\n\n    const views = this._addedViews || this.children._views;\n\n    this.triggerMethod('before:render:children', this, views);\n\n    if (this.isEmpty()) {\n      this._showEmptyView();\n    } else {\n      this._destroyEmptyView();\n\n      const els = this._getBuffer(views);\n\n      this._attachChildren(els, views);\n    }\n\n    delete this._addedViews;\n\n    this.triggerMethod('render:children', this, views);\n  },\n\n  // Renders each view and creates a fragment buffer from them\n  _getBuffer(views) {\n    const elBuffer = this.Dom.createBuffer();\n\n    _.each(views, view => {\n      renderView(view);\n      // corresponds that view is shown in a Region or CollectionView\n      view._isShown = true;\n      this.Dom.appendContents(elBuffer, view.el, {_$contents: view.$el});\n    });\n\n    return elBuffer;\n  },\n\n  _attachChildren(els, views) {\n    const shouldTriggerAttach = this._isAttached && this.monitorViewEvents !== false;\n\n    views = shouldTriggerAttach ? views : [];\n\n    _.each(views, view => {\n      if (view._isAttached) { return; }\n      view.triggerMethod('before:attach', view);\n    });\n\n    this.attachHtml(els, this.$container);\n\n    _.each(views, view => {\n      if (view._isAttached) { return; }\n      view._isAttached = true;\n      view.triggerMethod('attach', view);\n    });\n  },\n\n  // Override this method to do something other than `.append`.\n  // You can attach any HTML at this point including the els.\n  attachHtml(els, $container) {\n    this.Dom.appendContents($container[0], els, {_$el: $container});\n  },\n\n  isEmpty() {\n    return !this.children.length;\n  },\n\n  _showEmptyView() {\n    const EmptyView = this._getEmptyView();\n\n    if (!EmptyView) {\n      return;\n    }\n\n    const options = this._getEmptyViewOptions();\n\n    const emptyRegion = this.getEmptyRegion();\n\n    emptyRegion.show(new EmptyView(options));\n  },\n\n  // Retrieve the empty view class\n  _getEmptyView() {\n    const emptyView = this.emptyView;\n\n    if (!emptyView) { return; }\n\n    return this._getView(emptyView);\n  },\n\n  // Remove the emptyView\n  _destroyEmptyView() {\n    const emptyRegion = this.getEmptyRegion();\n    // Only empty if a view is show so the region\n    // doesn't detach any other unrelated HTML\n    if (emptyRegion.hasView()) {\n      emptyRegion.empty();\n    }\n  },\n\n  //\n  _getEmptyViewOptions() {\n    const emptyViewOptions = this.emptyViewOptions || this.childViewOptions;\n\n    if (_.isFunction(emptyViewOptions)) {\n      return emptyViewOptions.call(this);\n    }\n\n    return emptyViewOptions;\n  },\n\n  swapChildViews(view1, view2) {\n    if (!this._children.hasView(view1) || !this._children.hasView(view2)) {\n      throw new MarionetteError({\n        name: classErrorName,\n        message: 'Both views must be children of the collection view to swap.',\n        url: 'marionette.collectionview.html#swapping-child-views'\n      });\n    }\n\n    this._children._swap(view1, view2);\n    this.Dom.swapEl(view1.el, view2.el);\n\n    // If the views are not filtered the same, refilter\n    if (this.children.hasView(view1) !== this.children.hasView(view2)) {\n      this.filter();\n    } else {\n      this.children._swap(view1, view2);\n    }\n\n    return this;\n  },\n\n  // Render the child's view and add it to the HTML for the collection view at a given index, based on the current sort\n  addChildView(view, index, options = {}) {\n    if (!view || view._isDestroyed) {\n      return view;\n    }\n\n    if (view._isShown) {\n      throw new MarionetteError({\n        name: classErrorName,\n        message: 'View is already shown in a Region or CollectionView',\n        url: 'marionette.collectionview.html#region-viewAlreadyShown'\n      });\n    }\n\n    if (_.isObject(index)) {\n      options = index;\n    }\n\n    // If options has defined index we should use it\n    if (options.index != null) {\n      index = options.index;\n    }\n\n    if (!this._isRendered) {\n      this.render();\n    }\n\n    this._addChild(view, index);\n\n    if (options.preventRender) {\n      this._hasUnrenderedViews = true;\n      return view;\n    }\n\n    const hasIndex = (typeof index !== 'undefined');\n    const isAddedToEnd = !hasIndex || index >= this._children.length;\n\n    // Only cache views if added to the end and there is no unrendered views\n    if (isAddedToEnd && !this._hasUnrenderedViews) {\n      this._addedViews = [view];\n    }\n\n    if (hasIndex) {\n      this._renderChildren();\n    } else {\n      this.sort();\n    }\n\n    return view;\n  },\n\n  // Detach a view from the children.  Best used when adding a\n  // childView from `addChildView`\n  detachChildView(view) {\n    this.removeChildView(view, { shouldDetach: true });\n\n    return view;\n  },\n\n  // Remove the child view and destroy it.  Best used when adding a\n  // childView from `addChildView`\n  // The options argument is for internal use only\n  removeChildView(view, options) {\n    if (!view) {\n      return view;\n    }\n\n    this._removeChildView(view, options);\n\n    this._removeChild(view);\n\n    if (this.isEmpty()) {\n      this._showEmptyView();\n    }\n\n    return view;\n  },\n\n  _removeChildViews(views) {\n    _.each(views, this._removeChildView.bind(this));\n  },\n\n  _removeChildView(view, {shouldDetach} = {}) {\n    view.off('destroy', this.removeChildView, this);\n\n    if (shouldDetach) {\n      this._detachChildView(view);\n    } else {\n      this._destroyChildView(view);\n    }\n\n    this.stopListening(view);\n  },\n\n  _destroyChildView(view) {\n    if (view._isDestroyed) {\n      return;\n    }\n\n    const shouldDisableEvents = this.monitorViewEvents === false;\n    destroyView(view, shouldDisableEvents);\n  },\n\n  // called by ViewMixin destroy\n  _removeChildren() {\n    this._destroyChildren();\n    const emptyRegion = this.getEmptyRegion();\n    emptyRegion.destroy();\n    delete this._addedViews;\n  },\n\n  // Destroy the child views that this collection view is holding on to, if any\n  _destroyChildren() {\n    if (!this._children.length) {\n      return;\n    }\n\n    this.triggerMethod('before:destroy:children', this);\n    if (this.monitorViewEvents === false) {\n      this.Dom.detachContents(this.el, this.$el);\n    }\n\n    this._removeChildViews(this._children._views);\n\n    // After all children have been destroyed re-init the container\n    this._children._init();\n    this.children._init();\n\n    this.triggerMethod('destroy:children', this);\n  }\n}, {\n  setDomApi,\n  setRenderer\n});\n\n_.extend(CollectionView.prototype, ViewMixin);\n\nexport default CollectionView;\n","// Behavior\n// --------\n\n// A Behavior is an isolated set of DOM /\n// user interactions that can be mixed into any View.\n// Behaviors allow you to blackbox View specific interactions\n// into portable logical chunks, keeping your views simple and your code DRY.\n\nimport _ from 'underscore';\nimport extend from './utils/extend';\nimport getNamespacedEventName from './utils/get-namespaced-event-name';\nimport CommonMixin from './mixins/common';\nimport DelegateEntityEventsMixin from './mixins/delegate-entity-events';\nimport TriggersMixin from './mixins/triggers';\nimport UIMixin from './mixins/ui';\n\nconst ClassOptions = [\n  'collectionEvents',\n  'events',\n  'modelEvents',\n  'triggers',\n  'ui'\n];\n\nconst Behavior = function(options, view) {\n  // Setup reference to the view.\n  // this comes in handle when a behavior\n  // wants to directly talk up the chain\n  // to the view.\n  this.view = view;\n\n  this._setOptions(options, ClassOptions);\n  this.cid = _.uniqueId(this.cidPrefix);\n\n  // Construct an internal UI hash using the behaviors UI\n  // hash combined and overridden by the view UI hash.\n  // This allows the user to use UI hash elements defined\n  // in the parent view as well as those defined in the behavior.\n  // This order will help the reuse and share of a behavior\n  // between multiple views, while letting a view override\n  // a selector under an UI key.\n  this.ui = _.extend({}, _.result(this, 'ui'), _.result(view, 'ui'));\n\n  // Proxy view triggers\n  this.listenTo(view, 'all', this.triggerMethod);\n\n  this.initialize.apply(this, arguments);\n};\n\nBehavior.extend = extend;\n\n// Behavior Methods\n// --------------\n\n_.extend(Behavior.prototype, CommonMixin, DelegateEntityEventsMixin, TriggersMixin, UIMixin, {\n  cidPrefix: 'mnb',\n\n  // This is a noop method intended to be overridden\n  initialize() {},\n\n  // proxy behavior $ method to the view\n  // this is useful for doing jquery DOM lookups\n  // scoped to behaviors view.\n  $() {\n    return this.view.$.apply(this.view, arguments);\n  },\n\n  // Stops the behavior from listening to events.\n  destroy() {\n    this.stopListening();\n\n    this.view._removeBehavior(this);\n\n    this._deleteEntityEventHandlers();\n\n    return this;\n  },\n\n  proxyViewProperties() {\n    this.$el = this.view.$el;\n    this.el = this.view.el;\n\n    return this;\n  },\n\n  bindUIElements() {\n    this._bindUIElements();\n\n    return this;\n  },\n\n  unbindUIElements() {\n    this._unbindUIElements();\n\n    return this;\n  },\n\n  getUI(name) {\n    return this._getUI(name);\n  },\n\n  // Handle `modelEvents`, and `collectionEvents` configuration\n  delegateEntityEvents() {\n    this._delegateEntityEvents(this.view.model, this.view.collection);\n\n    return this;\n  },\n\n  undelegateEntityEvents() {\n    this._undelegateEntityEvents(this.view.model, this.view.collection);\n\n    return this;\n  },\n\n  _getEvents() {\n    if (!this.events) { return; }\n\n    // Normalize behavior events hash to allow\n    // a user to use the @ui. syntax.\n    const behaviorEvents = this.normalizeUIKeys(_.result(this, 'events'));\n\n    // binds the handler to the behavior and builds a unique eventName\n    return _.reduce(behaviorEvents, (events, behaviorHandler, key) => {\n      if (!_.isFunction(behaviorHandler)) {\n        behaviorHandler = this[behaviorHandler];\n      }\n      if (!behaviorHandler) { return events; }\n      key = getNamespacedEventName(key, this.cid);\n      events[key] = behaviorHandler.bind(this);\n      return events;\n    }, {});\n  },\n\n  // Internal method to build all trigger handlers for a given behavior\n  _getTriggers() {\n    if (!this.triggers) { return; }\n\n    // Normalize behavior triggers hash to allow\n    // a user to use the @ui. syntax.\n    const behaviorTriggers = this.normalizeUIKeys(_.result(this, 'triggers'));\n\n    return this._getViewTriggers(this.view, behaviorTriggers);\n  }\n});\n\nexport default Behavior;\n","// Application\n// -----------\n\nimport _ from 'underscore';\nimport extend from './utils/extend';\nimport buildRegion from './common/build-region';\nimport CommonMixin from './mixins/common';\nimport DestroyMixin from './mixins/destroy';\nimport RadioMixin from './mixins/radio';\nimport Region from './region';\n\nconst ClassOptions = [\n  'channelName',\n  'radioEvents',\n  'radioRequests',\n  'region',\n  'regionClass'\n];\n\nconst Application = function(options) {\n  this._setOptions(options, ClassOptions);\n  this.cid = _.uniqueId(this.cidPrefix);\n  this._initRegion();\n  this._initRadio();\n  this.initialize.apply(this, arguments);\n};\n\nApplication.extend = extend;\n\n// Application Methods\n// --------------\n\n_.extend(Application.prototype, CommonMixin, DestroyMixin, RadioMixin, {\n  cidPrefix: 'mna',\n\n  // This is a noop method intended to be overridden\n  initialize() {},\n\n  // Kick off all of the application's processes.\n  start(options) {\n    this.triggerMethod('before:start', this, options);\n    this.triggerMethod('start', this, options);\n    return this;\n  },\n\n  regionClass: Region,\n\n  _initRegion() {\n    const region = this.region;\n\n    if (!region) { return; }\n\n    const defaults = {\n      regionClass: this.regionClass\n    };\n\n    this._region = buildRegion(region, defaults);\n  },\n\n  getRegion() {\n    return this._region;\n  },\n\n  showView(view, ...args) {\n    const region = this.getRegion();\n    region.show(view, ...args);\n    return view;\n  },\n\n  getView() {\n    return this.getRegion().currentView;\n  }\n});\n\nexport default Application;\n","import {version as VERSION} from '../package.json';\n\nimport proxy from './utils/proxy';\nimport extend from './utils/extend';\n\nimport {\n  bindEvents as _bindEvents,\n  unbindEvents as _unbindEvents\n} from './common/bind-events';\nimport {\n  bindRequests as _bindRequests,\n  unbindRequests as _unbindRequests\n} from './common/bind-requests';\nimport _getOption from './common/get-option';\nimport _mergeOptions from './common/merge-options';\nimport monitorViewEvents from './common/monitor-view-events';\nimport _normalizeMethods from './common/normalize-methods';\nimport _triggerMethod from './common/trigger-method';\n\nimport Events from './mixins/events';\n\nimport MnObject from './object';\nimport View from './view';\nimport CollectionView from './collection-view';\nimport Behavior from './behavior';\nimport Region from './region';\nimport Application from './application';\n\nimport DomApi from './config/dom';\n\nimport {\n  isEnabled,\n  setEnabled\n} from './config/features';\n\n// Utilities\n\nexport const bindEvents = proxy(_bindEvents);\nexport const unbindEvents = proxy(_unbindEvents);\nexport const bindRequests = proxy(_bindRequests);\nexport const unbindRequests = proxy(_unbindRequests);\nexport const mergeOptions = proxy(_mergeOptions);\nexport const getOption = proxy(_getOption);\nexport const normalizeMethods = proxy(_normalizeMethods);\nexport const triggerMethod = proxy(_triggerMethod);\n\n\n// Configuration\n\nexport const setDomApi = function(mixin) {\n  CollectionView.setDomApi(mixin);\n  Region.setDomApi(mixin);\n  View.setDomApi(mixin);\n};\nexport const setRenderer = function(renderer) {\n  CollectionView.setRenderer(renderer);\n  View.setRenderer(renderer);\n};\n\nexport {\n  View,\n  CollectionView,\n  MnObject,\n  Region,\n  Behavior,\n  Application,\n  isEnabled,\n  setEnabled,\n  monitorViewEvents,\n  Events,\n  extend,\n  DomApi,\n  VERSION\n};\n\nexport default {\n  View,\n  CollectionView,\n  MnObject,\n  Object: MnObject,\n  Region,\n  Behavior,\n  Application,\n  isEnabled,\n  setEnabled,\n  monitorViewEvents,\n  Events,\n  extend,\n  DomApi,\n  VERSION\n};\n"],"names":["proxy","method","context","args","apply","extend","Backbone","Model","normalizeMethods","hash","_","reduce","normalizedHash","name","isFunction","errorProps","MarionetteError","call","Error","version","options","error","message","pick","captureStackTrace","url","urlRoot","normalizeBindings","bindings","isObject","bindEvents","entity","listenTo","unbindEvents","stopListening","bindRequests","channel","reply","unbindRequests","stopReplying","getOption","optionName","undefined","mergeOptions","keys","each","key","option","triggerMethodChildren","view","event","shouldTrigger","_getImmediateChildren","child","triggerMethod","shouldTriggerAttach","_isAttached","shouldAttach","shouldTriggerDetach","shouldDetach","triggerDOMRefresh","_isRendered","triggerDOMRemove","handleBeforeAttach","handleAttach","handleBeforeDetach","handleDetach","handleBeforeRender","handleRender","monitorViewEvents","_areViewEventsMonitored","on","splitter","methodCache","getEventName","match","prefix","eventName","toUpperCase","getOnMethodName","replace","methodName","result","drop","arguments","trigger","CommonMixin","classOptions","Events","_isDestroyed","channelName","Radio","_channel","radioEvents","radioRequests","_destroyRadio","ClassOptions","MarionetteObject","_setOptions","cid","uniqueId","cidPrefix","_initRadio","initialize","prototype","DestroyMixin","RadioMixin","invokeMap","invoke","getBehaviorClass","behaviorClass","BehaviorClass","parseBehaviors","behaviors","allBehaviors","reducedBehaviors","behaviorDefiniton","behavior","push","_behaviors","triggers","_invoke","memo","_triggers","events","_events","undelegate","without","model","collection","_modelEvents","_collectionEvents","template","data","mixinTemplateContext","serializeData","html","_renderHtml","attachElContent","serializedData","templateContext","serializeModel","serializeCollection","attributes","map","models","Dom","setContents","el","$el","delegateEventSplitter","getNamespacedEventName","namespace","FEATURES","isEnabled","setEnabled","state","buildViewTrigger","triggerDef","isString","shouldPreventDefault","preventDefault","shouldStopPropagation","stopPropagation","value","normalizeUIKeys","ui","val","normalizedKey","normalizeUIString","uiRegEx","uiString","r","slice","normalizeUIValues","property","propertyVal","uiBindings","_getUIBindings","_uiBindings","_ui","selector","$","getEl","setDomApi","mixin","document","createDocumentFragment","ownerDocument","documentElement","find","childEl","contains","parentNode","_$el","detach","newEl","oldEl","parent","replaceChild","el1","el2","parent1","parent2","next1","nextSibling","next2","insertBefore","contents","_$contents","append","hasChildNodes","ViewMixin","DomApi","hasEl","getDocumentEl","_proxyBehaviorViewProperties","_buildEventProxies","combinedEvents","_getBehaviorEvents","_getEvents","_getBehaviorTriggers","_getTriggers","View","delegateEvents","_getViewTriggers","_delegateEntityEvents","_delegateBehaviorEntityEvents","_undelegateEntityEvents","_undelegateBehaviorEntityEvents","_isDestroying","_disableDetachEvents","unbindUIElements","_removeElement","_removeChildren","_destroyBehaviors","_deleteEntityEventHandlers","_triggerEventOnBehaviors","off","removeData","detachEl","_bindUIElements","_bindBehaviorUIElements","_unbindUIElements","_unbindBehaviorUIElements","_getUI","_childViewEvents","_childViewTriggers","_eventPrefix","_getEventPrefix","defaultPrefix","_childViewEventHandler","childViewEvents","childViewTriggers","BehaviorsMixin","DelegateEntityEventsMixin","TemplateRenderMixin","TriggersMixin","UIMixin","renderView","supportsRenderLifecycle","render","destroyView","disableDetachEvents","destroy","supportsDestroyLifecycle","remove","classErrorName","Region","_initEl","_setElement","_ensureElement","_getView","currentView","_isShown","_isSwappingView","empty","_setupChildView","_attachView","length","shouldReplace","_isReplaced","_restoreEl","_replaceEl","attachHtml","_proxyChildViewEvents","_empty","parentView","_parentView","replaceElement","_isElAttached","_shouldDisableMonitoring","shouldReplaceEl","allowMissingEl","viewOptions","_getViewOptions","findEl","replaceEl","_detachView","appendContents","detachHtml","shouldDestroy","removeView","_stopChildViewEvents","shouldRestoreEl","detachContents","reset","_name","_removeReferences","definition","defaults","buildRegionFromObject","regionClass","RegionClass","regions","_regions","addRegions","isEmpty","_addRegions","regionDefinitions","partial","buildRegion","_addRegion","region","_removeRegion","_getRegions","bind","getRegions","getRegion","clone","show","detachView","setRenderer","renderer","childReducer","children","_initBehaviors","_initRegions","constructor","delegateEntityEvents","setElement","hasContents","bindUIElements","getTemplate","_reInitRegions","_renderTemplate","removeRegions","RegionsMixin","Container","_init","methods","_views","concat","stringComparator","comparator","get","_viewsByCid","_indexByModel","_updateLength","index","_addViewIndexes","splice","_sortBy","sort","sortedViews","sortBy","_set","views","shouldReset","view1","view2","view1Index","findIndexByView","view2Index","swapView","findByModelCid","modelCid","indexOf","findByCid","CollectionView","_initChildViewStorage","getEmptyRegion","_children","ChildViewContainer","$emptyEl","$container","_emptyRegion","isDestroyed","_onCollectionSort","_onCollectionReset","_onCollectionUpdate","add","merge","sortWithCollection","viewComparator","_destroyChildren","_addChildModels","changes","removedViews","removed","_removeChildModels","_addedViews","added","_detachChildren","_removeChildViews","_removeChildModel","findByModel","_removeChild","_remove","_addChildModel","_createChildView","_addChild","ChildView","_getChildView","childViewOptions","_getChildViewOptions","buildChildView","_add","childView","ChildViewClass","removeChildView","_initialEvents","_getChildViewContainer","childViewContainer","_sortChildren","filter","getComparator","_sort","preventRender","comparatorChanged","shouldSort","setComparator","_viewComparator","_filterChildren","_renderChildren","viewFilter","_getFilter","attachViews","detachViews","getFilter","matcher","matches","filterChanged","shouldRender","setFilter","detachingViews","_detachChildView","_hasUnrenderedViews","_showEmptyView","_destroyEmptyView","els","_getBuffer","_attachChildren","elBuffer","createBuffer","EmptyView","_getEmptyView","_getEmptyViewOptions","emptyRegion","emptyView","hasView","emptyViewOptions","_swap","swapEl","hasIndex","isAddedToEnd","_removeChildView","_destroyChildView","shouldDisableEvents","Behavior","_removeBehavior","behaviorEvents","behaviorHandler","behaviorTriggers","Application","_initRegion","_region","_bindEvents","_unbindEvents","_bindRequests","_unbindRequests","_mergeOptions","_getOption","_normalizeMethods","_triggerMethod","MnObject"],"mappings":"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"}